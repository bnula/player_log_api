@page "/register" 
@using player_log_blazor_ui.Authentication

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan

<div class="card">
    <h3 class="card-title">Register</h3>
    @if (response == false)
    {
        <div class="alert alert-danger">
            <p>Something went wrong!</p>
        </div>
    }
    <div class="card-body">
        <EditForm Model="model" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="email">Email Address</label>
                <InputText Id="email" type="password" class="form-control" @bind-Value="model.EmailAddress" />
                <ValidationMessage For="@(() => model.EmailAddress)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" class="form-control" @bind-Value="model.Password" />
                <ValidationMessage For="@(() => model.Password)" />
            </div>
            <div class="form-group">
                <label for="confirmPw">Confirm Password</label>
                <InputText Id="confirmPw" type="password" class="form-control" @bind-Value="model.ConfirmPassword" />
                <ValidationMessage For="@(() => model.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Register</button>

        </EditForm>
    </div>
</div>

@code {
    private RegistrationModel model = new RegistrationModel();

    bool response = true;

    private async Task HandleRegistration()
    {
        var respone = await _authRepo.Register(model);
        if (response == true)
        {
            _navMan.NavigateTo("/login");
        }
    }

}
